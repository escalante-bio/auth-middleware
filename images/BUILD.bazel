load("@rules_distroless//distroless:defs.bzl", "cacerts", "group", "home", "passwd")
load("@rules_oci//oci:defs.bzl", "oci_image")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//images:stamping.bzl", "all_stamp_variables")

package(default_visibility = ["//visibility:public"])

BASE_PACKAGES = [
    "base-files",
    "coreutils",
    "libstdc++6",
    "netbase",
    "tzdata",
]

NODEJS_PACKAGES = ["bash"]

platform(
    name = "linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

cacerts(
    name = "cacerts",
    package = select({
        "@platforms//cpu:arm64": "@bookworm//ca-certificates/arm64:data",
        "@platforms//cpu:x86_64": "@bookworm//ca-certificates/amd64:data",
    }),
)

home(
    name = "home",
    dirs = [
        {
            "home": "/root",
            "uid": 0,
            "gid": 0,
        },
        {
            "home": "/home/app",
            "uid": 1000,
            "gid": 1000,
        },
    ],
)

passwd(
    name = "passwd",
    entries = [
        {
            "uid": 0,
            "gid": 0,
            "home": "/root",
            "shell": "/bin/bash",
            "username": "root",
        },
        {
            "uid": 1000,
            "gid": 1000,
            "home": "/home/app",
            "shell": "/bin/bash",
            "username": "app",
        },
    ],
)

group(
    name = "group",
    entries = [
        {
            "name": "root",
            "gid": 0,
        },
        {
            "name": "app",
            "gid": 1000,
        },
    ],
)

oci_image(
    name = "base",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    os = "linux",
    tars = [
        ":cacerts",
        ":group",
        ":home",
        ":passwd",
    ] + select({
        "@platforms//cpu:arm64": [
            "@bookworm//%s/arm64" % package
            for package in BASE_PACKAGES
        ],
        "@platforms//cpu:x86_64": [
            "@bookworm//%s/amd64" % package
            for package in BASE_PACKAGES
        ],
    }),
    user = "app",
)

oci_image(
    name = "nodejs",
    base = ":base",
    tars = select({
        "@platforms//cpu:arm64": [
            "@bookworm//%s/arm64" % package
            for package in NODEJS_PACKAGES
        ],
        "@platforms//cpu:x86_64": [
            "@bookworm//%s/amd64" % package
            for package in NODEJS_PACKAGES
        ],
    }),
)

pkg_tar(
    name = "stamp_tar",
    srcs = [":stamp"],
    package_dir = "/",
)

all_stamp_variables(
    name = "stamp",
)
